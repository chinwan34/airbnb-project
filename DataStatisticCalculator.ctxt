#BlueJ class context
comment0.target=DataStatisticCalculator
comment0.text=\r\n\ The\ calculations\ to\ derive\ the\ statistics\ for\ the\ properties\r\n\ in\ a\ specific\ price\ range.\r\n\r\n\ @author\ Chin\ Wan\ k21016106\r\n\ @version\ 30/03/2022\r\n
comment1.params=data\ stationData
comment1.target=DataStatisticCalculator(java.util.ArrayList,\ java.util.ArrayList)
comment10.params=
comment10.target=int\ getTotalNumberOfEntireHomeApt()
comment11.params=
comment11.target=java.lang.String\ getMostExpensivePropertyBorough()
comment12.params=
comment12.target=int\ getTotalNumberOfListings()
comment13.params=
comment13.target=java.lang.String\ getAverageAvailabilityTime()
comment14.params=
comment14.target=java.lang.String\ getMostExpensiveBorough()
comment15.params=
comment15.target=java.lang.String\ getAverageTimeLastReview()
comment16.params=
comment16.target=java.lang.String\ getAverageDistanceToTube()
comment17.params=
comment17.target=java.util.ArrayList\ getAveragePricePerBoroughData()
comment18.params=
comment18.target=java.util.ArrayList\ getPrivateRoomsPerBoroughData()
comment19.params=
comment19.target=java.util.ArrayList\ getEntireRoomsPerBoroughData()
comment2.params=
comment2.target=void\ setupBoroughData()
comment20.params=
comment20.target=void\ loadStatistics()
comment21.params=p_lat\ p_lon\ s_lat\ s_lon
comment21.target=double\ distanceBetweenCoordinates(double,\ double,\ double,\ double)
comment21.text=\r\n\ Calculate\ the\ distance\ between\ two\ coordinates.\r\n\ @return\ the\ distance\ between\ two\ coordinates.\r\n
comment22.params=
comment22.target=java.lang.String\ mostReviewedHost()
comment22.text=\r\n\ Get\ the\ host\ with\ the\ most\ reviews\ of\ his/her\ properties\r\n\ @return\ The\ host\ with\ the\ most\ review\r\n
comment23.params=
comment23.target=java.util.Map\ listOfMostReviewedHosts()
comment23.text=\r\n\ Create\ a\ map\ containing\ the\ top\ 20\ most\ reviewed\ hosts\r\n\ @return\ A\ map\ with\ hosts'names\ as\ keys,\ number\ of\ reviews\ as\ values\r\n
comment24.params=first\ second
comment24.target=int\ compare(java.lang.Integer,\ java.lang.Integer)
comment25.params=
comment25.target=java.util.Map\ averageReviewEachYear()
comment25.text=\r\n\ To\ create\ a\ map\ containing\ the\ amount\ of\ reviews\ per\ year\r\n\ @return\ A\ map\ with\ years\ keys,\ amount\ of\ reviews\ that\ year\ as\ values\r\n\ @throws\ ParseException\ If\ the\ string\ cannot\ be\ parsed\ in\ date\ format\r\n
comment3.params=
comment3.target=java.util.ArrayList\ getData()
comment3.text=\r\n\ Get\ the\ list\ of\ data\ of\ the\ properties.\r\n\ @return\ Data\ of\ the\ properties\r\n
comment4.params=
comment4.target=java.util.ArrayList\ getStationData()
comment4.text=\r\n\ Get\ the\ list\ of\ data\ of\ the\ tube/train\ station.\r\n\ @return\ Data\ of\ the\ tube/train\ station.\r\n
comment5.params=
comment5.target=int\ getMaxPrice()
comment5.text=\r\n\ Get\ the\ maximum\ price\ out\ of\ all\ the\ properties.\r\n\ @return\ The\ maximum\ price\ out\ of\ all\ properties\r\n
comment6.params=
comment6.target=java.util.ArrayList\ getPriceRange()
comment6.text=\r\n\ Get\ the\ range\ of\ the\ prices\ in\ between\ 0\ and\ the\ maximum\ price.\r\n\ @return\ An\ arrayList\ of\ prices\ with\ interval\ of\ 50\r\n
comment7.params=fromPrice\ toPrice
comment7.target=java.util.ArrayList\ getListingsInPriceRange(int,\ int)
comment7.text=\r\n\ Get\ the\ property\ listings\ in\ between\ the\ price\ range\r\n\ @param\ fromPrice\ The\ lowest\ price\ selected\r\n\ @param\ toPrice\ The\ highest\ price\ selected\r\n
comment8.params=boroughName
comment8.target=java.util.ArrayList\ getListingsInBorough(java.lang.String)
comment9.params=
comment9.target=int\ getAverageReview()
numComments=26
